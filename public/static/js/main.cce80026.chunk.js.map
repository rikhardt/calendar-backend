{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","helpers/calendar-messages-es.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","formLoginValues","handleLoginInputChange","formRegisterValues","handleRegisterInputChange","rName","rEmail","rPassword1","rPassword2","lEmail","lPassword","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","state","auth","onClick","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","endPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","modalOpen","ui","activeEvent","calendar","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","AddNewFab","DeleteEventFab","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isLoggedIn","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","intialState","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cce80026.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\nconst fetchSinToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\n\r\nconst fetchConToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || ''\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","\r\nexport const types = {\r\n   uiOpenModal: '[ui] Open modal',\r\n   uiCloseModal: '[ui] Close modal',\r\n\r\n   eventSetActive: '[event] Set active',\r\n   eventLogout: '[event] Logout event',\r\n   eventStartAddNew: '[event] Start add new',\r\n   eventAddNew: '[event] Add new ',\r\n   eventClearActiveEvent: '[event] Clear active event',\r\n   eventUpdated: '[event] Event update',\r\n   eventDeleted: '[event] Event deleted',\r\n   eventLoaded: '[event] Event loadead',\r\n\r\n   authChecking: '[auth] Checking login state',\r\n   authCheckingFinish: '[auth] Finish checking login state',\r\n   authStartLogin: '[auth] Start login',\r\n   authLogin: '[auth] Login',\r\n   authStartRegister: '[auth] Start register',\r\n   authStartTokenRenew: '[auth] Start token renew',\r\n   authLogout: '[auth] Logout',\r\n\r\n\r\n}\r\n","import moment from \"moment\"\r\n\r\n\r\nexport const prepareEvents = (events = []) => {\r\n\r\n    return events.map(\r\n        (e) => ({\r\n            ...e,\r\n            end: moment(e.end).toDate(),\r\n            start: moment(e.start).toDate(),\r\n        })\r\n    );\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async(dispatch, getState) => {\r\n\r\n      const {uid, name} = getState().auth;\r\n \r\n      try {\r\n        const resp = await fetchConToken('events', event, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if(body.ok) {\r\n\r\n            event.id = body.evento.id;\r\n            event.user = {\r\n                _id: uid,\r\n                name: name\r\n            }\r\n            dispatch(eventAddNew(event));\r\n        }\r\n\r\n      } catch (error) {\r\n          console.log(error);\r\n      }\r\n    }\r\n}\r\n\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n})\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n})\r\n\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n})\r\n\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async(dispatch) => {\r\n        try {\r\n           \r\n           const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\r\n           const body = await resp.json();\r\n\r\n           if (body.ok) {\r\n               dispatch(eventUpdated(event));\r\n           } else {\r\n               Swal.fire('Error', body.msg, 'error');\r\n           }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n \r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n})\r\n\r\n\r\nexport const eventStartDelete = () => {\r\n    return async(dispatch, getState) => {\r\n\r\n        const {id} = getState().calendar.activeEvent;\r\n\r\n        try {\r\n           \r\n           const resp = await fetchConToken(`events/${id}`, {}, 'DELETE');\r\n           const body = await resp.json();\r\n\r\n           if (body.ok) {\r\n               dispatch(eventDeleted());\r\n           } else {\r\n               Swal.fire('Error', body.msg, 'error');\r\n           }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({ type: types.eventDeleted })\r\n\r\n\r\nexport const eventStartLoading = () => {\r\n    return async(dispatch) => {\r\n        try {\r\n            \r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n\r\n            const events = prepareEvents(body.eventos) ;\r\n\r\n            dispatch(eventLoaded(events));\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n       \r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\nexport const eventLogout = () => ({ type: types.eventLogout })","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async(dispatch) => {\r\n        \r\n        const resp = await fetchSinToken('auth', {email, password}, 'POST')\r\n        const body  = await resp.json();        \r\n        \r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return async(dispatch) => {\r\n        const resp = await fetchSinToken('auth/new', {name, password, email}, 'POST')\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({                \r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error')            \r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const startChecking = () => {\r\n    return async(dispatch) => {\r\n        const resp = await fetchConToken('auth/renew')\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({                \r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            dispatch(checkingFinish());\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish })\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(eventLogout());\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout })","import { useState } from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    };\r\n\r\n    const handleInputChange = ({target}) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n    };\r\n    return [values, handleInputChange, reset];\r\n};","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [formLoginValues, handleLoginInputChange] = useForm({});\r\n    \r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({});\r\n\r\n    const {rName, rEmail, rPassword1, rPassword2} = formRegisterValues;\r\n\r\n    const {lEmail, lPassword} = formLoginValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail, lPassword));\r\n    }\r\n    \r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        if (rPassword1 !== rPassword2) {\r\n            return Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error')\r\n        }\r\n        dispatch(startRegister(rEmail, rPassword1, rName));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}                                \r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const {name} = useSelector( state => state.auth );\r\n    const dispatch = useDispatch();\r\n\r\n   const handleLogout = () => {\r\n        dispatch(startLogout());\r\n   }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n\r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={handleLogout}\r\n                >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n\r\n    const {title, user} = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong>\r\n            <span> - {user.name}</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n});\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n});","import React, { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventStartAddNew, eventClearActiveEvent, eventStartUpdate } from '../../actions/events';\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root')\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst endPlus1 = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: endPlus1.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate())\r\n    const [dateEnd, setDateEnd] = useState(endPlus1.toDate())\r\n    const [titleValid, setTitleValid] = useState(true)\r\n\r\n    const {modalOpen} = useSelector( state => state.ui );\r\n    const {activeEvent} = useSelector( state => state.calendar );\r\n\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const {notes, title, start, end} = formValues;\r\n\r\n    useEffect(() => {\r\n        if (activeEvent) {     \r\n            setFormValues(activeEvent);\r\n        } else {\r\n            setFormValues(initEvent);\r\n        }\r\n    }, [activeEvent])\r\n\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal())\r\n        dispatch(eventClearActiveEvent())\r\n        setFormValues(initEvent)\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n            setDateStart(e)\r\n            setFormValues({\r\n                ...formValues,\r\n                start: e\r\n            })\r\n    }\r\n    const handleEndDateChange = (e) => {\r\n            setDateEnd(e)\r\n            setFormValues({\r\n                ...formValues,\r\n                end: e\r\n            })\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n            Swal.fire('Error', 'La fecha de fin debe ser mayor a la fecha de inicio', 'error');\r\n            return;\r\n        }\r\n\r\n        if (title.trim().length < 2) {\r\n            return setTitleValid(false)\r\n        }\r\n\r\n        \r\n        if (activeEvent) {\r\n            dispatch(eventStartUpdate(formValues));\r\n        } else {\r\n            dispatch(eventStartAddNew(formValues));\r\n        }\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={200}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n\r\n            <h1> {(activeEvent)? 'Editar evento': 'Nuevo evento'} </h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={handleSubmitForm}\r\n                >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        minDate={dateStart}\r\n                        value={dateEnd}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title} \r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes} \r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClick = () => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={handleClick}\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n            \r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const handleDelete = () => {\r\n            dispatch(eventStartDelete());\r\n    }\r\n\r\n    return (\r\n\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleDelete}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento </span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\nimport { Navbar } from '../ui/Navbar'\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\n// moment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment)\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month')\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading());\r\n    }, [dispatch])\r\n\r\n\r\n    const {events, activeEvent} = useSelector( state => state.calendar );\r\n    const {uid} = useSelector( state => state.auth );\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e));\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e)\r\n        localStorage.setItem('lastView', e)\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }        \r\n\r\n        return {\r\n            style\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFab />\r\n\r\n            {\r\n            (activeEvent) &&\r\n             <DeleteEventFab />\r\n            }\r\n\r\n            <CalendarModal />\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n    isLoggedIn,\r\n    component: Component,\r\n    ...rest\r\n}) => { \r\n\r\n    // localStorage.setItem('lastPath', rest.location.pathname);\r\n    \r\n    return (\r\n        <Route {...rest}\r\n            component={props => (\r\n                (isLoggedIn)\r\n                    ? (<Component {...props} />)\r\n                    : (<Redirect to=\"/login\" />)\r\n            )}\r\n        \r\n        />\r\n    )\r\n};\r\n\r\n\r\nPrivateRoute.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n    isLoggedIn,\r\n    component: Component,\r\n    ...rest\r\n}) => { \r\n    \r\n    return (\r\n        <Route {...rest}\r\n            component={props => (\r\n                (isLoggedIn)\r\n                ? (<Redirect to=\"/\" />)\r\n                : (<Component {...props} />)\r\n            )}\r\n        \r\n        />\r\n    )\r\n};\r\n\r\n\r\nPublicRoute.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from 'react-router-dom';\r\nimport { startChecking } from '../actions/auth';\r\n\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {checking, uid} = useSelector( state => state.auth );\r\n\r\n    useEffect(() => {\r\n        dispatch(startChecking());\r\n    }, [dispatch])\r\n\r\n\r\n    if (checking) {\r\n        return <h1>Espere...</h1>   \r\n    }\r\n\r\n    return (\r\n\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        exact \r\n                        path=\"/login\" \r\n                        component={LoginScreen}\r\n                        isLoggedIn={!!uid}\r\n                        />\r\n                    <PrivateRoute \r\n                        exact \r\n                        path=\"/\" \r\n                        component={CalendarScreen}\r\n                        isLoggedIn={!!uid}\r\n                        />\r\n\r\n                    <Redirect to=\"/\" />\r\n\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n}\r\n\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n            \r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { types } from '../types/types';\r\n\r\n\r\n// {\r\n//     id: 'ksksksksksks',\r\n//     title: 'Cumpleaños del jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     notes: 'Comprar el pastel',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Ricardo' \r\n//     }\r\n// }\r\n\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n}\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [action.payload, ...state.events]\r\n            }\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            }\r\n        \r\n        case types.eventDeleted:\r\n        return {\r\n            ...state,\r\n            events: state.events.filter(\r\n                e => (e.id !== state.activeEvent.id)\r\n            ),\r\n            activeEvent: null\r\n        }\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst intialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = (state = intialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer,\r\n})","import { applyMiddleware, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { AppRouter } from './router/AppRouter';\r\nimport { store } from './store/store';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n           <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}